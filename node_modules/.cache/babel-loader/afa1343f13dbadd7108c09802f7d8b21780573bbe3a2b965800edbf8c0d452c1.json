{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan_LK\\\\code\\\\React\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Register } from \"./Register\";\nimport { Login } from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentForm, SetcurrentForm] = useState('');\n  const toggleForm = formName => {\n    setCurrentForm(formName);\n  };\n\n  //Etat State\n\n  const [providers, Setproviders] = useState([{\n    id: 1,\n    name: \"fournisseur\"\n  }, {\n    id: 2,\n    name: \"Glowme\"\n  }, {\n    id: 3,\n    name: \"Red\"\n  }]);\n  const [newprovider, Setnewprovider] = useState(\"\");\n\n  //Comportement \n  const handleDelete = id => {\n    console.log(id);\n\n    //copie du state\n    const providersCopy = [...providers];\n\n    //Manipuler mon state\n    const providersCopyUpdated = providersCopy.filter(provider => provider.id !== id);\n\n    //actualiser le state\n    Setproviders(providersCopyUpdated);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    //copie du state \n    const providersCopy = [...providers];\n    //manipulation de la copie \n    const id = new Date().getTime;\n    const name = newprovider;\n    providersCopy.push({\n      id,\n      name\n    });\n\n    //modification du state avec son setter \n    Setproviders(providersCopy);\n    Setnewprovider(\"\");\n  };\n  const handleChange = event => {\n    Setnewprovider(event.target.value);\n  };\n  //   //Affichage (render)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentForm === \"login\" ? /*#__PURE__*/_jsxDEV(Login, {\n      onFormSwitch: toggleForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      onFormSwitch: toggleForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 69\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"Xc5SwvDAkQ2ngvMHWWuj9CCXBiQ=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Register","Login","App","currentForm","SetcurrentForm","toggleForm","formName","setCurrentForm","providers","Setproviders","id","name","newprovider","Setnewprovider","handleDelete","console","log","providersCopy","providersCopyUpdated","filter","provider","handleSubmit","event","preventDefault","Date","getTime","push","handleChange","target","value"],"sources":["C:/Users/Nathan_LK/code/React/my-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Register } from \"./Register\"\nimport { Login } from \"./Login\"\n\nfunction App(){\n\n  const [currentForm, SetcurrentForm] = useState('')\n\n  const toggleForm = (formName) => {\n    setCurrentForm(formName);\n  }\n\n  //Etat State\n\n  const [providers, Setproviders] = useState([\n    {id : 1, name : \"fournisseur\"},\n    {id : 2, name : \"Glowme\" },\n    {id : 3, name : \"Red\" }\n  ]);\n\n  const [newprovider, Setnewprovider] = useState(\"\");\n\n  //Comportement \n  const handleDelete = (id) =>{\n    console.log(id)\n        \n    //copie du state\n    const providersCopy = [...providers]\n\n    //Manipuler mon state\n    const providersCopyUpdated = providersCopy.filter(provider => provider.id !== id)\n\n    //actualiser le state\n    Setproviders(providersCopyUpdated);\n\n \n  }\n  const handleSubmit = (event) =>{\n    event.preventDefault();\n    //copie du state \n    const providersCopy = [...providers];\n    //manipulation de la copie \n     const id = new Date().getTime;\n     const name = newprovider;\n     providersCopy.push({id, name});\n\n\n    //modification du state avec son setter \n     Setproviders(providersCopy);\n     Setnewprovider(\"\");\n  }\n  const handleChange= (event) =>{\n    Setnewprovider(event.target.value);\n\n   }\n//   //Affichage (render)\n\n  return (\n   <div >{    \n    \n    currentForm === \"login\" ? <Login onFormSwitch={toggleForm} /> : <Register onFormSwitch={toggleForm} />}\n    \n    {/* <h1>Manage my providers list</h1>\n    <ul>\n      {providers.map((provider) =>  \n      <li key ={provider.id}>{provider.name} <button onClick ={()=> handleDelete(provider.id)}>X</button></li>) }\n    </ul>\n    <form action= \"submit\" onSubmit={handleSubmit}>\n      <input value= {newprovider} type = \"text\" placeholder= \"Add new provider...\" onChange={handleChange}/>\n      <button>Add+</button>\n\n    </form> */}\n  </div>);\n};\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,KAAK,QAAQ,SAAS;AAAA;AAE/B,SAASC,GAAG,GAAE;EAAA;EAEZ,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMM,UAAU,GAAIC,QAAQ,IAAK;IAC/BC,cAAc,CAACD,QAAQ,CAAC;EAC1B,CAAC;;EAED;;EAEA,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CACzC;IAACW,EAAE,EAAG,CAAC;IAAEC,IAAI,EAAG;EAAa,CAAC,EAC9B;IAACD,EAAE,EAAG,CAAC;IAAEC,IAAI,EAAG;EAAS,CAAC,EAC1B;IAACD,EAAE,EAAG,CAAC;IAAEC,IAAI,EAAG;EAAM,CAAC,CACxB,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMe,YAAY,GAAIJ,EAAE,IAAI;IAC1BK,OAAO,CAACC,GAAG,CAACN,EAAE,CAAC;;IAEf;IACA,MAAMO,aAAa,GAAG,CAAC,GAAGT,SAAS,CAAC;;IAEpC;IACA,MAAMU,oBAAoB,GAAGD,aAAa,CAACE,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACV,EAAE,KAAKA,EAAE,CAAC;;IAEjF;IACAD,YAAY,CAACS,oBAAoB,CAAC;EAGpC,CAAC;EACD,MAAMG,YAAY,GAAIC,KAAK,IAAI;IAC7BA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA,MAAMN,aAAa,GAAG,CAAC,GAAGT,SAAS,CAAC;IACpC;IACC,MAAME,EAAE,GAAG,IAAIc,IAAI,EAAE,CAACC,OAAO;IAC7B,MAAMd,IAAI,GAAGC,WAAW;IACxBK,aAAa,CAACS,IAAI,CAAC;MAAChB,EAAE;MAAEC;IAAI,CAAC,CAAC;;IAG/B;IACCF,YAAY,CAACQ,aAAa,CAAC;IAC3BJ,cAAc,CAAC,EAAE,CAAC;EACrB,CAAC;EACD,MAAMc,YAAY,GAAGL,KAAK,IAAI;IAC5BT,cAAc,CAACS,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC;EAEnC,CAAC;EACJ;;EAEE,oBACC;IAAA,UAEC1B,WAAW,KAAK,OAAO,gBAAG,QAAC,KAAK;MAAC,YAAY,EAAEE;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,gBAAG,QAAC,QAAQ;MAAC,YAAY,EAAEA;IAAW;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAYlG;AACR;AAAC,GArEQH,GAAG;AAAA,KAAHA,GAAG;AAqEX;AAED,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}