{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan_LK\\\\code\\\\React\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Providers = props => {\n  _s();\n  //Etat State\n\n  const [providers, Setproviders] = useState([{\n    id: 1,\n    name: \"fournisseur\"\n  }, {\n    id: 2,\n    name: \"Glowme\"\n  }, {\n    id: 3,\n    name: \"Red\"\n  }]);\n  const [newprovider, Setnewprovider] = useState(\"\");\n\n  //Comportement \n  const handleDelete = id => {\n    console.log(id);\n\n    //copie du state\n    const providersCopy = [...providers];\n\n    //Manipuler mon state\n    const providersCopyUpdated = providersCopy.filter(provider => provider.id !== id);\n\n    //actualiser le state\n    Setproviders(providersCopyUpdated);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    //copie du state \n    const providersCopy = [...providers];\n    //manipulation de la copie \n    const id = new Date().getTime;\n    const name = newprovider;\n    providersCopy.push({\n      id,\n      name\n    });\n\n    //modification du state avec son setter \n    Setproviders(providersCopy);\n    Setnewprovider(\"\");\n  };\n  const handleChange = event => {\n    Setnewprovider(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage my providers list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: providers.map(provider => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [provider.name, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(provider.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 44\n        }, this)]\n      }, provider.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"submit\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newprovider,\n        type: \"text\",\n        placeholder: \"Add new provider...\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n_s(Providers, \"J777/3skIcyZ9dCL+X4tUWh/9gs=\");\n_c = Providers;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"Providers\");","map":{"version":3,"names":["React","useState","Providers","props","providers","Setproviders","id","name","newprovider","Setnewprovider","handleDelete","console","log","providersCopy","providersCopyUpdated","filter","provider","handleSubmit","event","preventDefault","Date","getTime","push","handleChange","target","value","map","App"],"sources":["C:/Users/Nathan_LK/code/React/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport const Providers = (props) => {\n      //Etat State\n\n  const [providers, Setproviders] = useState([\n    {id : 1, name : \"fournisseur\"},\n    {id : 2, name : \"Glowme\" },\n    {id : 3, name : \"Red\" }\n  ]);\n\n  const [newprovider, Setnewprovider] = useState(\"\");\n\n  //Comportement \n  const handleDelete = (id) =>{\n    console.log(id)\n        \n    //copie du state\n    const providersCopy = [...providers]\n\n    //Manipuler mon state\n    const providersCopyUpdated = providersCopy.filter(provider => provider.id !== id)\n\n    //actualiser le state\n    Setproviders(providersCopyUpdated);\n\n \n  }\n  const handleSubmit = (event) =>{\n    event.preventDefault();\n    //copie du state \n    const providersCopy = [...providers];\n    //manipulation de la copie \n     const id = new Date().getTime;\n     const name = newprovider;\n     providersCopy.push({id, name});\n\n\n    //modification du state avec son setter \n     Setproviders(providersCopy);\n     Setnewprovider(\"\");\n  }\n  const handleChange= (event) =>{\n    Setnewprovider(event.target.value);\n\n   }\n\nreturn(\n  <div>\n    <h1>Manage my providers list</h1>\n    <ul>\n    {providers.map((provider) =>  \n    <li key ={provider.id}>{provider.name} <button onClick ={()=> handleDelete(provider.id)}>X</button></li>) }\n    </ul>\n    <form action= \"submit\" onSubmit={handleSubmit}>\n    <input value= {newprovider} type = \"text\" placeholder= \"Add new provider...\" onChange={handleChange}/>\n    <button>Add+</button>\n    </form> \n</div>)\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,OAAO,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC9B;;EAEJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,CACzC;IAACK,EAAE,EAAG,CAAC;IAAEC,IAAI,EAAG;EAAa,CAAC,EAC9B;IAACD,EAAE,EAAG,CAAC;IAAEC,IAAI,EAAG;EAAS,CAAC,EAC1B;IAACD,EAAE,EAAG,CAAC;IAAEC,IAAI,EAAG;EAAM,CAAC,CACxB,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMS,YAAY,GAAIJ,EAAE,IAAI;IAC1BK,OAAO,CAACC,GAAG,CAACN,EAAE,CAAC;;IAEf;IACA,MAAMO,aAAa,GAAG,CAAC,GAAGT,SAAS,CAAC;;IAEpC;IACA,MAAMU,oBAAoB,GAAGD,aAAa,CAACE,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACV,EAAE,KAAKA,EAAE,CAAC;;IAEjF;IACAD,YAAY,CAACS,oBAAoB,CAAC;EAGpC,CAAC;EACD,MAAMG,YAAY,GAAIC,KAAK,IAAI;IAC7BA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA,MAAMN,aAAa,GAAG,CAAC,GAAGT,SAAS,CAAC;IACpC;IACC,MAAME,EAAE,GAAG,IAAIc,IAAI,EAAE,CAACC,OAAO;IAC7B,MAAMd,IAAI,GAAGC,WAAW;IACxBK,aAAa,CAACS,IAAI,CAAC;MAAChB,EAAE;MAAEC;IAAI,CAAC,CAAC;;IAG/B;IACCF,YAAY,CAACQ,aAAa,CAAC;IAC3BJ,cAAc,CAAC,EAAE,CAAC;EACrB,CAAC;EACD,MAAMc,YAAY,GAAGL,KAAK,IAAI;IAC5BT,cAAc,CAACS,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC;EAEnC,CAAC;EAEJ,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiC,eACjC;MAAA,UACCrB,SAAS,CAACsB,GAAG,CAAEV,QAAQ,iBACxB;QAAA,WAAwBA,QAAQ,CAACT,IAAI,oBAAE;UAAQ,OAAO,EAAG,MAAKG,YAAY,CAACM,QAAQ,CAACV,EAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAW;MAAA,GAAzFU,QAAQ,CAACV,EAAE;QAAA;QAAA;QAAA;MAAA,QAAmF;IAAC;MAAA;MAAA;MAAA;IAAA,QACpG,eACL;MAAM,MAAM,EAAE,QAAQ;MAAC,QAAQ,EAAEW,YAAa;MAAA,wBAC9C;QAAO,KAAK,EAAGT,WAAY;QAAC,IAAI,EAAG,MAAM;QAAC,WAAW,EAAE,qBAAqB;QAAC,QAAQ,EAAEe;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eACtG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB;IAAA;MAAA;MAAA;MAAA;IAAA,QACd;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AACN,CAAC;AAAA,GAzDYrB,SAAS;AAAA,KAATA,SAAS;AA2DtB,eAAeyB,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}